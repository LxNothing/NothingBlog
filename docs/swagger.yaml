definitions:
  controller.ResponseCodeType:
    enum:
    - 1000
    - 1001
    - 1002
    - 1003
    - 1004
    - 1005
    - 1006
    - 1007
    - 1008
    - 1009
    - 1010
    - 1011
    - 1012
    - 1013
    - 1014
    - 1015
    - 1016
    - 1017
    type: integer
    x-enum-varnames:
    - CodeSuccess
    - CodeParameterInvalid
    - CodeUserNotExist
    - CodeUserExist
    - CodePasswordError
    - CodeServerBusy
    - CodeTokenInvaild
    - CodeTokenEmpty
    - CodeNeedReLogin
    - CodeCommunityIdInvalid
    - CodeVerifyCodeInvaild
    - CodeArticleTitleExisted
    - CodeArticleNotExisted
    - CodeHaveArticleInClass
    - CodeTagExisted
    - CodeTagNotExisted
    - CodeClassNotExisted
    - CodeClassNameExisted
  controller.ResponseData:
    properties:
      code:
        $ref: '#/definitions/controller.ResponseCodeType'
      data:
        description: omitempty 该字段为空时忽略
      msg: {}
    type: object
  models.DeleteMultiArticleParams:
    properties:
      ids:
        description: 待删除的文章ID列表
        items:
          type: integer
        type: array
    required:
    - ids
    type: object
  models.LoginParams:
    properties:
      password:
        type: string
      username:
        type: string
      verify_code:
        allOf:
        - $ref: '#/definitions/models.VerifyCodeParams'
        description: 验证码
    required:
    - password
    - username
    - verify_code
    type: object
  models.ModifyPasswordParams:
    properties:
      new_password:
        description: 新密码
        type: string
      old_password:
        description: 旧密码
        type: string
      username:
        description: 用户名
        type: string
      verify_code:
        allOf:
        - $ref: '#/definitions/models.VerifyCodeParams'
        description: 验证码
    required:
    - new_password
    - old_password
    - username
    - verify_code
    type: object
  models.NewArticleFormsParams:
    properties:
      class_id:
        description: 文章所属的分类 - 比如教程，分享等
        example: "0"
        type: string
      content:
        description: 文章内容
        type: string
      en_comment:
        description: 是否允许评论 false-不允许 true-允许
        type: boolean
      image:
        description: 文章缩略图
        type: string
      privilege:
        allOf:
        - $ref: '#/definitions/models.PrivilegeType'
        description: 文章权限 0-公开 1-私有
      status:
        allOf:
        - $ref: '#/definitions/models.StatusType'
        description: 文章状态 0-草稿 1-发布 2-删除
      summary:
        description: 文章的摘要信息
        type: string
      tag_id_list:
        description: 文章标签-标签可以为空
        items:
          $ref: '#/definitions/models.TagFormsParams'
        type: array
      title:
        description: 文章标题
        type: string
      top_flag:
        description: 是否置顶标志 false-没有置顶 true-置顶
        type: boolean
    required:
    - class_id
    - content
    - title
    type: object
  models.PrivilegeType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-comments:
      PrivilegeAll: 所有权限
      PrivilegePrivte: 1- 当前文章私有，客户端不可见
      PrivilegePublic: 0 - 当前文章是公开的，客户端可见（默认）
    x-enum-varnames:
    - PrivilegePublic
    - PrivilegePrivte
    - PrivilegeAll
  models.ResetPasswordParams:
    properties:
      email:
        description: 邮箱
        type: string
      username:
        description: 用户名
        type: string
    required:
    - username
    type: object
  models.SignUpParams:
    properties:
      email:
        description: 邮箱 - 仅在重置密码时，接收验证码使用
        type: string
      password:
        description: 密码
        type: string
      re_password:
        description: 确认密码
        type: string
      username:
        description: 用户名 - 用户名作为唯一标识，不允许重复
        type: string
      verify_code:
        allOf:
        - $ref: '#/definitions/models.VerifyCodeParams'
        description: 验证码
    required:
    - password
    - re_password
    - username
    - verify_code
    type: object
  models.StatusType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      StatusAll: 所有状态
      StatusCommit: 1 - 已经提交，外部可以访问（同时Privilege要为公开才可以）
      StatusDelete: 2 - 预删除，处于这种状态外部不可见，但是数据仍然在数据库（类似垃圾回收站）
      StatusDraft: 0 - 草稿
    x-enum-varnames:
    - StatusDraft
    - StatusCommit
    - StatusDelete
    - StatusAll
  models.TagFormsParams:
    properties:
      id:
        description: tag id
        example: "0"
        type: string
    required:
    - id
    type: object
  models.UpdateArticleFormsParams:
    properties:
      article_id:
        example: "0"
        type: string
      class_id:
        description: 文章所属的分类 - 比如教程，分享等
        example: "0"
        type: string
      content:
        description: 文章内容
        type: string
      en_comment:
        description: 是否允许评论 false-不允许 true-允许
        type: boolean
      image:
        description: 文章缩略图
        type: string
      privilege:
        allOf:
        - $ref: '#/definitions/models.PrivilegeType'
        description: 文章权限 0-公开 1-私有
      status:
        allOf:
        - $ref: '#/definitions/models.StatusType'
        description: 文章状态 0-草稿 1-发布 2-删除
      summary:
        description: 文章的摘要信息
        type: string
      tag_id_list:
        description: 文章标签-标签可以为空
        items:
          $ref: '#/definitions/models.TagFormsParams'
        type: array
      title:
        description: 文章标题
        type: string
      top_flag:
        description: 是否置顶标志 false-没有置顶 true-置顶
        type: boolean
    required:
    - article_id
    - class_id
    - content
    - title
    type: object
  models.VerifyCodeParams:
    properties:
      code:
        type: string
      id:
        type: string
    required:
    - code
    - id
    type: object
host: localhost:8080
info:
  contact: {}
  description: NgBlog Go博客项目 API 接口文档
  title: NgBlog
  version: "1.0"
paths:
  /article:
    post:
      consumes:
      - application/json
      description: 通过该接口可以创建文章
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建文章的参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.NewArticleFormsParams'
      produces:
      - application/json
      responses:
        "200":
          description: code=200表示成功其余失败
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 创建文章的接口
      tags:
      - 文章相关接口
    put:
      consumes:
      - application/json
      description: 通过该接口可以更新指定的文章
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      - description: 更新文章的参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.UpdateArticleFormsParams'
      produces:
      - application/json
      responses:
        "200":
          description: code=200表示成功其余失败
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 更新文章的接口
      tags:
      - 文章相关接口
  /article/:id:
    delete:
      consumes:
      - application/json
      description: 通过该接口可以删除指定的文章
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code=200表示成功其余失败
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 删除单篇文章的接口
      tags:
      - 文章相关接口
    get:
      consumes:
      - application/json
      description: 通过该接口可以查询文章详细信息
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code=200表示成功其余失败
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 通过文章ID查询文章详细信息的接口
      tags:
      - 文章相关接口
  /articles:
    delete:
      consumes:
      - application/json
      description: 通过该接口可以删除指定的文章
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      - description: 删除文章的参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.DeleteMultiArticleParams'
      produces:
      - application/json
      responses:
        "200":
          description: code=200表示成功其余失败
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 删除多篇文章的接口
      tags:
      - 文章相关接口
    get:
      consumes:
      - application/json
      description: 通过该接口可以获得当前的所有文章
      parameters:
      - description: Bearer token(jwt)
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - ApiKeyAuth: []
      summary: 获取所有文章的接口
      tags:
      - 文章相关接口
  /auth/login:
    post:
      consumes:
      - application/json
      description: 用于用户登录
      parameters:
      - description: 登录参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.LoginParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - "No": []
      summary: 用户登录接口
      tags:
      - 认证相关接口
  /auth/password/modify:
    post:
      consumes:
      - application/json
      description: 用于修改用户密码，不需要登录，需要验证旧密码，账户和验证码
      parameters:
      - description: 修改密码的参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ModifyPasswordParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - "No": []
      summary: 修改用户密码
      tags:
      - 认证相关接口
  /auth/password/reset:
    post:
      consumes:
      - application/json
      description: 用于用户重置密码，需要使用邮箱 - 功能未实现
      parameters:
      - description: 重置密码的参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - "No": []
      summary: 重置密码接口
      tags:
      - 认证相关接口
  /auth/signup:
    post:
      consumes:
      - application/json
      description: 用户注册的接口，需要接收参数
      parameters:
      - description: 注册参数
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/models.SignUpParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - "No": []
      summary: 用户注册的接口
      tags:
      - 认证相关接口
  /auth/verifycode:
    get:
      consumes:
      - application/json
      description: 通过该接口可以获得基于数字的验证码，目前只支持数字验证码，后续可以更改
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - "No": []
      summary: 获取数字验证码的接口
      tags:
      - 认证相关接口
swagger: "2.0"
